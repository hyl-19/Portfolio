11027222黃彥霖_oop_HW4

文字說明:
先建立抽象的class叫Beverage，兩個抽象方法分別為getIngredient()和getCost()，一個protected型別的Beverage drink
去儲存未來有配料要放在一起時，有東西可以儲存，兩個抽象發法的目的是要強制任何一種配料都要去實作那兩個method，
一開始drink = new ingredient(); 或是之後drink = new ingredient(drink); ， 用不同的constructor去完成配料的設定
，在紅茶裡面可以設定好配料名字叫紅茶和他的價格，以後要更新直接更改這邊就好。不論要加幾種配料都可以，他會一層一
層的把加進去的東西印出來，價格也會從每個配料的cost去找他的值。

未來只要有新的配料只要去實作Beverage全部就都可以使用。
